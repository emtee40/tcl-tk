package require tcltest 2.2
eval tcltest::configure $argv
tcltest::loadTestedCommands

set tk_strictMotif_old $tk_strictMotif

proc ToPressButton {parent btn} {
	after 100 SendButtonPress $parent $btn mouse
}

proc PressButton {btn} {
    event generate $btn <Enter>
    event generate $btn <1> -x 5 -y 5
    event generate $btn <ButtonRelease-1> -x 5 -y 5
}

proc SendButtonPress {parent btn type} {
    if {$parent == "."} {
	set w .__tk_filedialog
    } else {
	set w $parent.__tk_filedialog
    }
    upvar ::tk::dialog::file::__tk_filedialog data

    set button $data($btn\Btn)
    if ![winfo ismapped $button] {
	update
    }

    if {$type == "mouse"} {
	PressButton $button
    } else {
	event generate $w <Enter>
#	focus $w
	event generate $button <Enter>
	event generate $w <KeyPress> -keysym Return
    }
}

set tmpFile "filebox.tmp"
makeFile {
    # this file can be empty!
} $tmpFile

array set filters {
    1 {}
    2 {
	{"Text files"		{.txt .doc}	}
	{"Text files"		{}		TEXT}
	{"Tcl Scripts"		{.tcl}		TEXT}
	{"C Source Files"	{.c .h}		}
	{"All Source Files"	{.tcl .c .h}	}
	{"Image Files"		{.gif}		}
	{"Image Files"		{.jpeg .jpg}	}
	{"Image Files"		""		{GIFF JPEG}}
	{"All files"		*}
    }
    3 {
	{"Text files"		{.txt .doc}	TEXT}
	{"Foo"			{""}		TEXT}
    }
}

set tk_strictMotif 1

    set parent .

    set fileName $tmpFile

	    ToPressButton $parent cancel
	    tk_getOpenFile -parent $parent -filetypes $filters(2)
		    
	ToPressButton $parent cancel
	tk_getSaveFile -parent $parent

set tk_strictMotif $tk_strictMotif_old

#puts "now fixfocus"
#fixfocus
#puts "returned from fixfocus"

# cleanup
removeFile filebox.tmp
cleanupTests
return
